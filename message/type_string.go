// Code generated by "stringer -type=Type -trimprefix=Type"; DO NOT EDIT.

package message

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TypeSetChunkSize-1]
	_ = x[TypeAbortMessage-2]
	_ = x[TypeAcknowledgement-3]
	_ = x[TypeUserControlMessage-4]
	_ = x[TypeWindowAcknowledgementSize-5]
	_ = x[TypeSetPeerBandwidth-6]
	_ = x[TypeEdgeAndOriginServerCommand-7]
	_ = x[TypeAudioMessage-8]
	_ = x[TypeVideoMessage-9]
	_ = x[TypeAmf3DataMessage-15]
	_ = x[TypeAmf3SharedObjectMessage-16]
	_ = x[TypeAmf3CommandMessage-17]
	_ = x[TypeAmf0DataMessage-18]
	_ = x[TypeAmf0SharedObjectMessage-19]
	_ = x[TypeAmf0CommandMessage-20]
	_ = x[TypeAggregateMessage-22]
	_ = x[TypeGoAway-32]
}

const (
	_Type_name_0 = "SetChunkSizeAbortMessageAcknowledgementUserControlMessageWindowAcknowledgementSizeSetPeerBandwidthEdgeAndOriginServerCommandAudioMessageVideoMessage"
	_Type_name_1 = "Amf3DataMessageAmf3SharedObjectMessageAmf3CommandMessageAmf0DataMessageAmf0SharedObjectMessageAmf0CommandMessage"
	_Type_name_2 = "AggregateMessage"
	_Type_name_3 = "GoAway"
)

var (
	_Type_index_0 = [...]uint8{0, 12, 24, 39, 57, 82, 98, 124, 136, 148}
	_Type_index_1 = [...]uint8{0, 15, 38, 56, 71, 94, 112}
)

func (i Type) String() string {
	switch {
	case 1 <= i && i <= 9:
		i -= 1
		return _Type_name_0[_Type_index_0[i]:_Type_index_0[i+1]]
	case 15 <= i && i <= 20:
		i -= 15
		return _Type_name_1[_Type_index_1[i]:_Type_index_1[i+1]]
	case i == 22:
		return _Type_name_2
	case i == 32:
		return _Type_name_3
	default:
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
