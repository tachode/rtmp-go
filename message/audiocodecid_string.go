// Code generated by "stringer -type=AudioCodecId -trimprefix=AudioCodecId"; DO NOT EDIT.

package message

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AudioCodecIdLinearPCMPlatformEndian-0]
	_ = x[AudioCodecIdADPCM-1]
	_ = x[AudioCodecIdMP3-2]
	_ = x[AudioCodecIdLinearPCMLittleEndian-3]
	_ = x[AudioCodecIdNellymoser16kHzMono-4]
	_ = x[AudioCodecIdNellymoser8kHzMono-5]
	_ = x[AudioCodecIdNellymoser-6]
	_ = x[AudioCodecIdG711ALaw-7]
	_ = x[AudioCodecIdG711MuLaw-8]
	_ = x[AudioCodecIdExtendedHeader-9]
	_ = x[AudioCodecIdAAC-10]
	_ = x[AudioCodecIdSpeex-11]
	_ = x[AudioCodecIdReserved-12]
	_ = x[AudioCodecIdOpus-13]
	_ = x[AudioCodecIdMP38kHz-14]
	_ = x[AudioCodecIdDeviceSpecific-15]
}

const _AudioCodecId_name = "LinearPCMPlatformEndianADPCMMP3LinearPCMLittleEndianNellymoser16kHzMonoNellymoser8kHzMonoNellymoserG711ALawG711MuLawExtendedHeaderAACSpeexReservedOpusMP38kHzDeviceSpecific"

var _AudioCodecId_index = [...]uint8{0, 23, 28, 31, 52, 71, 89, 99, 107, 116, 130, 133, 138, 146, 150, 157, 171}

func (i AudioCodecId) String() string {
	if i >= AudioCodecId(len(_AudioCodecId_index)-1) {
		return "AudioCodecId(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _AudioCodecId_name[_AudioCodecId_index[i]:_AudioCodecId_index[i+1]]
}
